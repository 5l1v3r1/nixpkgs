diff --git a/build/compile-gschemas.py b/build/compile-gschemas.py
index 3dd1729d..fc0b1afc 100644
--- a/build/compile-gschemas.py
+++ b/build/compile-gschemas.py
@@ -2,9 +2,12 @@
 
 import os
 import subprocess
+import sys
 
-prefix = os.environ.get('MESON_INSTALL_PREFIX')
-schemadir = os.path.join(prefix, 'share', 'glib-2.0', 'schemas')
+if len(sys.argv) < 2:
+    sys.exit("usage: compile-gschemas.py <schemadir>")
+
+schemadir = sys.argv[1]
 
 if os.environ.get('DESTDIR') is None:
     print('Compiling GSettings schemas...')
diff --git a/installed-tests/debugger.test.in b/installed-tests/debugger.test.in
index 67d4c3ad..57e01ac7 100644
--- a/installed-tests/debugger.test.in
+++ b/installed-tests/debugger.test.in
@@ -1,4 +1,4 @@
 [Test]
 Type=session
-Exec=@pkglibexecdir@/installed-tests/debugger-test.sh @pkglibexecdir@/installed-tests/debugger/@name@
+Exec=@installed_tests_execdir@/debugger-test.sh @installed_tests_execdir@/debugger/@name@
 Output=TAP
diff --git a/installed-tests/js/meson.build b/installed-tests/js/meson.build
index 3b355cda..79ac4633 100644
--- a/installed-tests/js/meson.build
+++ b/installed-tests/js/meson.build
@@ -6,11 +6,10 @@ jsunit_resources_files = gnome.compile_resources('jsunit-resources',
 minijasmine = executable('minijasmine', '../minijasmine.cpp',
     jsunit_resources_files, dependencies: libgjs_dep,
     cpp_args: [
-        '-DINSTTESTDIR="@0@"'.format(get_option('prefix') / installed_tests_dir),
-        '-DPKGLIBDIR="@0@"'.format(get_option('prefix') / pkglibdir)
+        '-DINSTTESTDIR="@0@"'.format(installed_tests_execdir),
     ],
     include_directories: top_include,
-    install: get_option('installed_tests'), install_dir: installed_tests_dir)
+    install: get_option('installed_tests'), install_dir: installed_tests_execdir)
 
 gidatadir = gi.get_pkgconfig_variable('gidatadir')
 gi_tests = gidatadir / 'tests'
@@ -44,13 +43,13 @@ regress_sources = [
 libregress = library('regress', regress_sources,
     c_args: regress_gir_c_args + test_gir_warning_c_args,
     dependencies: regress_dependencies, install: get_option('installed_tests'),
-    install_dir: pkglibdir)
+    install_dir: installed_tests_execdir)
 regress_gir = gnome.generate_gir(libregress, includes: regress_gir_includes,
     sources: regress_sources, namespace: 'Regress', nsversion: '1.0',
     identifier_prefix: 'Regress', symbol_prefix: 'regress_',
     extra_args: ['--warn-all', '--warn-error'] + regress_gir_c_args,
     install: get_option('installed_tests'), install_dir_gir: false,
-    install_dir_typelib: installed_tests_dir)
+    install_dir_typelib: installed_tests_execdir)
 regress_typelib = regress_gir[1]
 
 warnlib_sources = [
@@ -60,14 +59,14 @@ warnlib_sources = [
 libwarnlib = library('warnlib', warnlib_sources,
     c_args: test_gir_warning_c_args + test_gir_extra_c_args,
     dependencies: [glib, gobject, gio], install: get_option('installed_tests'),
-    install_dir: pkglibdir)
+    install_dir: installed_tests_execdir)
 # This should have --warn-all turned off, but there is currently no way to do so
 # in gnome.generate_gir(). See https://github.com/mesonbuild/meson/issues/5876
 warnlib_gir = gnome.generate_gir(libwarnlib, includes: ['Gio-2.0'],
     sources: warnlib_sources, namespace: 'WarnLib', nsversion: '1.0',
     symbol_prefix: 'warnlib_', header: 'warnlib.h',
     install: get_option('installed_tests'), install_dir_gir: false,
-    install_dir_typelib: installed_tests_dir)
+    install_dir_typelib: installed_tests_execdir)
 warnlib_typelib = warnlib_gir[1]
 
 gimarshallingtests_sources = [
@@ -77,13 +76,13 @@ gimarshallingtests_sources = [
 libgimarshallingtests = library('gimarshallingtests',
     gimarshallingtests_sources, dependencies: [glib, gobject, gio],
     c_args:  test_gir_extra_c_args + test_gir_warning_c_args,
-    install: get_option('installed_tests'), install_dir: pkglibdir)
+    install: get_option('installed_tests'), install_dir: installed_tests_execdir)
 gimarshallingtests_gir = gnome.generate_gir(libgimarshallingtests,
     includes: ['Gio-2.0'], sources: gimarshallingtests_sources,
     namespace: 'GIMarshallingTests', nsversion: '1.0',
     symbol_prefix: 'gi_marshalling_tests_', extra_args: '--warn-error',
     install: get_option('installed_tests'), install_dir_gir: false,
-    install_dir_typelib: installed_tests_dir)
+    install_dir_typelib: installed_tests_execdir)
 gimarshallingtests_typelib = gimarshallingtests_gir[1]
 
 jasmine_tests = [
@@ -129,7 +128,7 @@ if not get_option('skip_gtk_tests')
     ]
 endif
 
-installed_js_tests_dir = installed_tests_dir / 'js'
+installed_js_tests_dir = installed_tests_execdir / 'js'
 
 gschemas_compiled = gnome.compile_schemas(
     depend_files: 'org.gnome.GjsTest.gschema.xml')
@@ -148,13 +147,13 @@ foreach test : jasmine_tests
 
     test_description_subst = {
         'name': 'test@0@.js'.format(test),
-        'pkglibexecdir': abs_pkglibexecdir,
+        'installed_tests_execdir': installed_tests_execdir,
     }
     test_description = configure_file(configuration: test_description_subst,
         input: '../minijasmine.test.in',
         output: 'test@0@.test'.format(test),
         install: get_option('installed_tests'),
-        install_dir: test_descriptions_dir)
+        install_dir: installed_tests_metadir)
 
     if get_option('installed_tests')
         install_data(test_file, install_dir: installed_js_tests_dir)
@@ -174,13 +173,13 @@ endif
 
 gdbus_test_description_subst = {
     'name': 'testGDBus.js',
-    'pkglibexecdir': abs_pkglibexecdir,
+    'installed_tests_execdir': installed_tests_execdir,
 }
 gdbus_test_description = configure_file(
     configuration: gdbus_test_description_subst,
     input: '../minijasmine.test.in', output: 'testGDBus.test',
     install: get_option('installed_tests'),
-    install_dir: test_descriptions_dir)
+    install_dir: installed_tests_metadir)
 
 if get_option('installed_tests')
     install_data('testGDBus.js', install_dir: installed_js_tests_dir)
diff --git a/installed-tests/meson.build b/installed-tests/meson.build
index b6c4e449..294d20c6 100644
--- a/installed-tests/meson.build
+++ b/installed-tests/meson.build
@@ -1,8 +1,7 @@
 ### Installed tests ############################################################
 
-installed_tests_dir = pkglibexecdir / 'installed-tests'
-test_descriptions_dir = (get_option('datadir') / 'installed-tests' /
-    meson.project_name())
+installed_tests_execdir = abs_pkglibexecdir / 'installed-tests'
+installed_tests_metadir = abs_datadir / 'installed-tests' / meson.project_name()
 
 # Simple shell script tests #
 
@@ -25,15 +24,15 @@ foreach test : simple_tests
 
     test_description_subst = {
         'name': 'test@0@.sh'.format(test),
-        'pkglibexecdir': abs_pkglibexecdir,
+        'installed_tests_execdir': installed_tests_execdir,
     }
     test_description = configure_file(configuration: test_description_subst,
         input: 'script.test.in', output: 'test@0@.sh.test'.format(test),
         install: get_option('installed_tests'),
-        install_dir: test_descriptions_dir)
+        install_dir: installed_tests_metadir)
 
     if get_option('installed_tests')
-        install_data(test_file, install_dir: installed_tests_dir / 'scripts')
+        install_data(test_file, install_dir: installed_tests_execdir / 'scripts')
     endif
 endforeach
 
@@ -65,7 +64,7 @@ debugger_tests = [
 
 debugger_test_driver = find_program(files('debugger-test.sh'))
 if get_option('installed_tests')
-    install_data('debugger-test.sh', install_dir: installed_tests_dir)
+    install_data('debugger-test.sh', install_dir: installed_tests_execdir)
 endif
 
 foreach test : debugger_tests
@@ -77,18 +76,18 @@ foreach test : debugger_tests
 
     test_description_subst = {
         'name': '@0@.debugger'.format(test),
-        'pkglibexecdir': abs_pkglibexecdir,
+        'installed_tests_execdir': installed_tests_execdir,
     }
     test_description = configure_file(configuration: test_description_subst,
         input: 'debugger.test.in',
         output: '@0@.test'.format(test),
         install: get_option('installed_tests'),
-        install_dir: test_descriptions_dir)
+        install_dir: installed_tests_metadir)
 
     if get_option('installed_tests')
-        install_data(test_file, install_dir: installed_tests_dir / 'debugger')
+        install_data(test_file, install_dir: installed_tests_execdir / 'debugger')
         install_data('debugger' / '@0@.debugger.js'.format(test),
             'debugger' / '@0@.debugger.output'.format(test),
-            install_dir: installed_tests_dir / 'debugger')
+            install_dir: installed_tests_execdir / 'debugger')
     endif
 endforeach
diff --git a/installed-tests/minijasmine.cpp b/installed-tests/minijasmine.cpp
index b02a6eb0..f8ca8490 100644
--- a/installed-tests/minijasmine.cpp
+++ b/installed-tests/minijasmine.cpp
@@ -54,7 +54,7 @@ main(int argc, char **argv)
         g_irepository_prepend_search_path(g_getenv("TOP_BUILDDIR"));
     } else {
         g_irepository_prepend_search_path(INSTTESTDIR);
-        g_irepository_prepend_library_path(PKGLIBDIR);
+        g_irepository_prepend_library_path(INSTTESTDIR);
     }
 
     const char *coverage_prefix = g_getenv("GJS_UNIT_COVERAGE_PREFIX");
diff --git a/installed-tests/minijasmine.test.in b/installed-tests/minijasmine.test.in
index 0069da3b..f3b8d5b2 100644
--- a/installed-tests/minijasmine.test.in
+++ b/installed-tests/minijasmine.test.in
@@ -1,4 +1,4 @@
 [Test]
 Type=session
-Exec=@pkglibexecdir@/installed-tests/minijasmine @pkglibexecdir@/installed-tests/js/@name@
+Exec=@installed_tests_execdir@/minijasmine @installed_tests_execdir@/js/@name@
 Output=TAP
diff --git a/installed-tests/script.test.in b/installed-tests/script.test.in
index 6b0d4038..03c1b059 100644
--- a/installed-tests/script.test.in
+++ b/installed-tests/script.test.in
@@ -1,4 +1,4 @@
 [Test]
 Type=session
-Exec=sh @pkglibexecdir@/installed-tests/scripts/@name@
+Exec=sh @installed_tests_execdir@/scripts/@name@
 Output=TAP
diff --git a/meson.build b/meson.build
index 0d8db482..4c06f567 100644
--- a/meson.build
+++ b/meson.build
@@ -310,6 +310,7 @@ endif
 gjsjsdir = get_option('datadir') / api_name
 pkglibexecdir = get_option('libexecdir') / meson.project_name()
 abs_pkglibexecdir = get_option('prefix') / pkglibexecdir
+abs_datadir = get_option('prefix') / get_option('datadir')
 pkglibdir = get_option('libdir') / meson.project_name()
 
 ### Build dtrace probes ########################################################
@@ -547,9 +548,9 @@ install_data('installed-tests/extra/lsan.supp',
     install_dir: get_option('datadir') / api_name / 'lsan')
 
 if get_option('installed_tests')
-    install_data('installed-tests/js/org.gnome.GjsTest.gschema.xml',
-        install_dir: get_option('datadir') / 'glib-2.0/schemas')
-    meson.add_install_script('build/compile-gschemas.py')
+    schemadir = abs_datadir / 'glib-2.0' / 'schemas'
+    install_data('installed-tests/js/org.gnome.GjsTest.gschema.xml', install_dir: schemadir)
+    meson.add_install_script('build/compile-gschemas.py', schemadir)
 endif
 
 ### Generate pkg-config file ###################################################
